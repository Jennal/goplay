@startuml

package transfer {
    interface Client {
        + bool IsConnected;

        + void Connect(string host, int port);
        + []byte Recv();
        + void Send([]byte);
    }

    interface Server {
        + []Client GetClients();

        + void Start()
        + void Stop()
    }
}

package encode {
    interface Encoder {
        + []byte Marshal(interface{});
    }

    interface Decoder {
        + interface{} Unmarshal([]byte);
    }

    interface EncodeDecoder extends Encoder, Decoder {
    }
}

package pkg {
    enum PackageType extends uint8 {
        PKG_NOTIFY,
        PKG_REQUEST,
        PKG_RESPONSE,
    }

    enum EncodingType extends uint8 {
        ENCODING_PROTOBUF,
        ENCODING_GOB,
        ENCODING_JSON,
        ENCODING_BSON,
    }

    class Header {
        PackageType Type;
        EncodingType Encoding;
        uint8 ID;
        uint16 ContentSize;
    }
}

@enduml